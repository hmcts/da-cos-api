server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/"
  main:
    allow-bean-definition-overriding: true
  application:
    name: Domestic Abuse COS API
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true

azure:
  application-insights:
    instrumentation-key: ${da.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}

core_case_data:
  api:
    url: ${CASE_DATA_STORE_BASEURL:http://ccd-data-store-api-aat.service.core-compute-aat.internal}
  search:
    page_size: ${CCD_SEARCH_PAGE_SIZE:100}

s2s-authorised:
  services: ${S2S_AUTHORISED_SERVICES:ccd_data}

idam:
  s2s-auth:
    url: ${S2S_URL:http://localhost:4552}
    secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
    microservice: da-cos-api
  api:
    url: ${IDAM_API_BASEURL:http://localhost:5000}
  systemupdate:
    username: ${IDAM_SYSTEM_UPDATE_USERNAME:dummysystemupdate@test.com}
    password: ${IDAM_SYSTEM_UPDATE_PASSWORD:dummy}
  client:
    id: 'da-cos-api'
    secret: ${IDAM_CLIENT_SECRET:123456}
    redirect_uri: ${IDAM_API_REDIRECT_URL:http://localhost:3001/oauth2/callback}

s2s:
  stub: false
